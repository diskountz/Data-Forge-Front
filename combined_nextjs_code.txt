Directory: components

File:   ContactEnrichmentForm.js

import { useState } from 'react';
import EnrichmentResultPopup from './EnrichmentResultPopup';

export default function ContactEnrichmentForm() {
  const [formData, setFormData] = useState({
    firstName: '',
    lastName: '',
    companyDomain: '',
    linkedinUrl: '',
    findEmail: false,
    getCompanyEmails: false,
    enrichLinkedIn: false,
    findPhone: false,
  });
  const [showPopup, setShowPopup] = useState(false);
  const [isLoading, setIsLoading] = useState(false);

  const handleChange = (e) => {
    const { name, value, type, checked } = e.target;
    setFormData(prevState => ({
      ...prevState,
      [name]: type === 'checkbox' ? checked : value
    }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsLoading(true);
    // Simulate API call
    await new Promise(resolve => setTimeout(resolve, 2000));
    setIsLoading(false);
    setShowPopup(true);
  };

  return (
    <>
      <form onSubmit={handleSubmit} className="bg-white p-6 rounded-lg shadow-lg">
        <h2 className="text-2xl font-bold mb-6 text-daring-indigo">Contact Enrichment</h2>
        <div className="mb-4">
          <label htmlFor="firstName" className="block text-sm font-medium text-gray-700">First Name</label>
          <input
            type="text"
            id="firstName"
            name="firstName"
            value={formData.firstName}
            onChange={handleChange}
            className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-emerald-pool focus:ring focus:ring-emerald-pool focus:ring-opacity-50"
            placeholder="John"
          />
        </div>
        <div className="mb-4">
          <label htmlFor="lastName" className="block text-sm font-medium text-gray-700">Last Name</label>
          <input
            type="text"
            id="lastName"
            name="lastName"
            value={formData.lastName}
            onChange={handleChange}
            className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-emerald-pool focus:ring focus:ring-emerald-pool focus:ring-opacity-50"
            placeholder="Doe"
          />
        </div>
        <div className="mb-4">
          <label htmlFor="companyDomain" className="block text-sm font-medium text-gray-700">Company Domain</label>
          <input
            type="text"
            id="companyDomain"
            name="companyDomain"
            value={formData.companyDomain}
            onChange={handleChange}
            className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-emerald-pool focus:ring focus:ring-emerald-pool focus:ring-opacity-50"
            placeholder="acmeinc.com"
          />
        </div>
        <div className="mb-4">
          <label htmlFor="linkedinUrl" className="block text-sm font-medium text-gray-700">LinkedIn URL (Required for Phone Enrichment)</label>
          <input
            type="text"
            id="linkedinUrl"
            name="linkedinUrl"
            value={formData.linkedinUrl}
            onChange={handleChange}
            className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-emerald-pool focus:ring focus:ring-emerald-pool focus:ring-opacity-50"
            placeholder="https://www.linkedin.com/in/username"
          />
        </div>
        <div className="mb-6">
          <h3 className="text-lg font-semibold mb-2 text-daring-indigo">Enrichment Options</h3>
          <div className="space-y-2">
            <label className="flex items-center">
              <input
                type="checkbox"
                name="findEmail"
                checked={formData.findEmail}
                onChange={handleChange}
                className="rounded text-emerald-pool focus:ring-emerald-pool"
              />
              <span className="ml-2">Find Individual Email</span>
            </label>
            <label className="flex items-center">
              <input
                type="checkbox"
                name="getCompanyEmails"
                checked={formData.getCompanyEmails}
                onChange={handleChange}
                className="rounded text-emerald-pool focus:ring-emerald-pool"
              />
              <span className="ml-2">Get Company Emails</span>
            </label>
            <label className="flex items-center">
              <input
                type="checkbox"
                name="enrichLinkedIn"
                checked={formData.enrichLinkedIn}
                onChange={handleChange}
                className="rounded text-emerald-pool focus:ring-emerald-pool"
              />
              <span className="ml-2">Enrich LinkedIn</span>
            </label>
            <label className="flex items-center">
              <input
                type="checkbox"
                name="findPhone"
                checked={formData.findPhone}
                onChange={handleChange}
                className="rounded text-emerald-pool focus:ring-emerald-pool"
              />
              <span className="ml-2">Find Phone Number</span>
            </label>
          </div>
        </div>
        <button
                  type="submit"
                  className={`w-full bg-emerald-pool text-white py-2 px-4 rounded-md hover:bg-opacity-90 transition duration-300 ${isLoading ? 'opacity-50 cursor-not-allowed' : ''}`}
                  disabled={isLoading}
                >
                  {isLoading ? 'Enriching Data...' : 'Enrich Data'}
                </button>
              </form>

              {showPopup && (
                <EnrichmentResultPopup
                  onClose={() => setShowPopup(false)}
                  formData={formData}
                />
              )}
            </>
          );
        }
----------------------------------------

File:   EnrichmentResultPopup.js

// components/EnrichmentResultPopup.js

import { useState } from 'react';

export default function EnrichmentResultPopup({ onClose, formData }) {
  const handleCreateAccount = () => {
    window.open('https://app.dataforge.so', '_blank');
  };

  const blurredEmail = 'user@example.com';
  const blurredPhone = '+1 (555) 123-4567';
  const blurredLinkedIn = 'LinkedIn profile enriched with 20+ data points';
  const blurredCompanyEmails = '5 company email formats found';

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4">
      <div className="bg-white rounded-lg p-6 max-w-md w-full">
        <h2 className="text-2xl font-bold mb-4 text-daring-indigo">Enrichment Results</h2>
        <div className="mb-4">
          <p className="font-semibold">Enriched data for: {formData.firstName} {formData.lastName}</p>
          <p className="text-sm text-gray-600">Company: {formData.companyDomain}</p>
        </div>
        <div className="mb-6">
          <p className="font-semibold mb-2">Results:</p>
          <div className="space-y-2">
            {formData.findEmail && (
              <div className="flex justify-between">
                <span className="font-medium">Email:</span>
                <span className="blur-sm select-none">{blurredEmail}</span>
              </div>
            )}
            {formData.findPhone && (
              <div className="flex justify-between">
                <span className="font-medium">Phone:</span>
                <span className="blur-sm select-none">{blurredPhone}</span>
              </div>
            )}
            {formData.enrichLinkedIn && (
              <div className="flex justify-between">
                <span className="font-medium">LinkedIn:</span>
                <span className="blur-sm select-none">{blurredLinkedIn}</span>
              </div>
            )}
            {formData.getCompanyEmails && (
              <div className="flex justify-between">
                <span className="font-medium">Company Emails:</span>
                <span className="blur-sm select-none">{blurredCompanyEmails}</span>
              </div>
            )}
          </div>
        </div>
        <button
          onClick={handleCreateAccount}
          className="w-full bg-emerald-pool text-white py-2 px-4 rounded-md hover:bg-opacity-90 transition duration-300 mb-2"
        >
          Create Account to View Results
        </button>
        <button
          onClick={onClose}
          className="w-full mt-2 text-gray-600 hover:text-gray-800"
        >
          Close
        </button>
      </div>
    </div>
  );
}
----------------------------------------

File:   Footer.js

// components/Footer.js

export default function Footer() {
  return (
    <footer className="bg-parfait bg-opacity-20 py-12">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="grid grid-cols-2 md:grid-cols-4 gap-8">
          <div>
            <h3 className="text-lg font-semibold text-daring-indigo mb-4">Product</h3>
            <ul className="space-y-2">
              <li><a href="#" className="text-napoleon hover:text-emerald-pool transition duration-300">Features</a></li>
              <li><a href="#" className="text-napoleon hover:text-emerald-pool transition duration-300">Pricing</a></li>
              <li><a href="#" className="text-napoleon hover:text-emerald-pool transition duration-300">Case Studies</a></li>
            </ul>
          </div>
          <div>
            <h3 className="text-lg font-semibold text-daring-indigo mb-4">Company</h3>
            <ul className="space-y-2">
              <li><a href="#" className="text-napoleon hover:text-emerald-pool transition duration-300">About Us</a></li>
              <li><a href="#" className="text-napoleon hover:text-emerald-pool transition duration-300">Careers</a></li>
              <li><a href="#" className="text-napoleon hover:text-emerald-pool transition duration-300">Contact</a></li>
            </ul>
          </div>
          <div>
            <h3 className="text-lg font-semibold text-daring-indigo mb-4">Resources</h3>
            <ul className="space-y-2">
              <li><a href="#" className="text-napoleon hover:text-emerald-pool transition duration-300">Blog</a></li>
              <li><a href="#" className="text-napoleon hover:text-emerald-pool transition duration-300">Help Center</a></li>
              <li><a href="#" className="text-napoleon hover:text-emerald-pool transition duration-300">API Documentation</a></li>
            </ul>
          </div>
          <div>
            <h3 className="text-lg font-semibold text-daring-indigo mb-4">Legal</h3>
            <ul className="space-y-2">
              <li><a href="#" className="text-napoleon hover:text-emerald-pool transition duration-300">Privacy Policy</a></li>
              <li><a href="#" className="text-napoleon hover:text-emerald-pool transition duration-300">Terms of Service</a></li>
              <li><a href="#" className="text-napoleon hover:text-emerald-pool transition duration-300">GDPR Compliance</a></li>
            </ul>
          </div>
        </div>
        <div className="mt-8 pt-8 border-t border-gray-200 text-center">
          <p className="text-napoleon">&copy; {new Date().getFullYear()} Data Forge. All rights reserved.</p>
        </div>
      </div>
    </footer>
  );
}
----------------------------------------

File:   Header.js

// components/Header.js

import Link from 'next/link';

export default function Header() {
  return (
    <header className="bg-white shadow-md">
      <nav className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4">
        <div className="flex justify-between items-center">
          <Link href="/">
            <span className="text-2xl font-bold text-daring-indigo cursor-pointer">Data Forge</span>
          </Link>
          <div className="hidden md:flex space-x-6">
            <Link href="#features"><a className="text-napoleon hover:text-emerald-pool transition duration-300">Features</a></Link>
            <Link href="#how-it-works"><a className="text-napoleon hover:text-emerald-pool transition duration-300">How It Works</a></Link>
            <Link href="#pricing"><a className="text-napoleon hover:text-emerald-pool transition duration-300">Pricing</a></Link>
            <Link href="#testimonials"><a className="text-napoleon hover:text-emerald-pool transition duration-300">Testimonials</a></Link>
          </div>
          <button className="bg-emerald-pool text-white px-4 py-2 rounded-lg font-semibold hover:bg-opacity-90 transition duration-300">
            Get Started
          </button>
        </div>
      </nav>
    </header>
  );
}
----------------------------------------

File: next.config.js

// File: next.config.js

module.exports = {
  reactStrictMode: true,
}
----------------------------------------

File: next-env.d.ts

/// <reference types="next" />
/// <reference types="next/image-types/global" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/basic-features/typescript for more information.

----------------------------------------

File: package.json

{
  "name": "data-forge",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "@heroicons/react": "^2.1.5",
    "framer-motion": "^6.5.1",
    "next": "12.3.4",
    "react": "18.2.0",
    "react-dom": "18.2.0"
  },
  "devDependencies": {
    "@types/node": "22.7.5",
    "@types/react": "18.3.11",
    "autoprefixer": "^10.4.14",
    "eslint": "8.38.0",
    "eslint-config-next": "13.3.0",
    "postcss": "^8.4.21",
    "tailwindcss": "^3.3.1",
    "typescript": "5.6.3"
  }
}

----------------------------------------

Directory: pages

Directory:   api

File:     hello.ts

// Next.js API route support: https://nextjs.org/docs/api-routes/introduction
import type { NextApiRequest, NextApiResponse } from 'next'

type Data = {
  name: string
}

export default function handler(
  req: NextApiRequest,
  res: NextApiResponse<Data>
) {
  res.status(200).json({ name: 'John Doe' })
}

----------------------------------------

File:   _app.js

// File: pages/_app.js

import '../styles/globals.css'

function MyApp({ Component, pageProps }) {
  return <Component {...pageProps} />
}

export default MyApp
----------------------------------------

File:   index.js

import Head from 'next/head';
import { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import Header from '../components/Header';
import Footer from '../components/Footer';
import ContactEnrichmentForm from '../components/ContactEnrichmentForm';

const fadeIn = {
  initial: { opacity: 0, y: 20 },
  animate: { opacity: 1, y: 0 },
  transition: { duration: 0.6 }
};

const enrichmentMethods = [
  {
    id: 'individual',
    title: 'Individual Enrichment',
    benefit: 'Get detailed insights on key decision-makers',
    description: 'Enhance your understanding of individual prospects with comprehensive data points including job history, skills, and social media presence. This deep insight allows for highly personalized outreach, increasing your chances of making meaningful connections.',
  },
  {
    id: 'bulk',
    title: 'Bulk Enrichment',
    benefit: 'Scale your outreach efforts efficiently',
    description: 'Upload and enrich thousands of contacts simultaneously, saving countless hours of manual research. Our bulk enrichment process maintains high accuracy while dramatically reducing the time needed to prepare for large-scale marketing or sales campaigns.',
  },
  {
    id: 'extension',
    title: 'Chrome Extension',
    benefit: 'Enrich on-the-go while browsing',
    description: 'Our Chrome extension seamlessly integrates with your workflow, allowing you to enrich contact data directly from LinkedIn profiles or company websites. This real-time enrichment capability ensures you always have the most up-to-date information at your fingertips during your research process.',
  },
  {
    id: 'api',
    title: 'API Integration',
    benefit: 'Automate your data enrichment process',
    description: 'Integrate our powerful enrichment capabilities directly into your existing tools and workflows. With our robust API, you can automate the enrichment process, ensuring your CRM or marketing platform always has the freshest, most accurate data without manual intervention.',
  },
];

const EnrichmentMethod = ({ method, isActive, onClick, isMobile }) => (
  <div className={`${isMobile ? 'mb-4' : ''}`}>
    <motion.div
      className={`cursor-pointer p-4 rounded-lg ${isActive ? 'bg-emerald-pool text-white' : 'bg-white hover:bg-puturple/30'}`}
      onClick={() => onClick(method.id)}
      whileHover={{ scale: 1.05 }}
      whileTap={{ scale: 0.95 }}
    >
      <h3 className={`text-xl font-semibold mb-2 ${isActive ? 'text-white' : 'text-daring-indigo'}`}>{method.title}</h3>
      <p className={`text-sm ${isActive ? 'text-white' : 'text-napoleon'}`}>{method.benefit}</p>
    </motion.div>
    {isMobile && isActive && (
      <AnimatePresence>
        <motion.div
          key={method.id}
          initial={{ opacity: 0, height: 0 }}
          animate={{ opacity: 1, height: 'auto' }}
          exit={{ opacity: 0, height: 0 }}
          transition={{ duration: 0.3 }}
          className="bg-white p-4 rounded-lg mt-2 shadow-md"
        >
          <p className="text-napoleon">{method.description}</p>
        </motion.div>
      </AnimatePresence>
    )}
  </div>
);

const FlexibleEnrichmentMethods = () => {
  const [activeMethod, setActiveMethod] = useState(enrichmentMethods[0].id);
  const [isMobile, setIsMobile] = useState(false);

  useEffect(() => {
    const checkIsMobile = () => {
      setIsMobile(window.innerWidth < 768);
    };
    checkIsMobile();
    window.addEventListener('resize', checkIsMobile);
    return () => window.removeEventListener('resize', checkIsMobile);
  }, []);

  return (
    <section className="py-20 bg-gradient-to-b from-white via-puturple/30 to-white">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <motion.h2 className="text-3xl font-bold text-center mb-12 text-daring-indigo" {...fadeIn}>
          Flexible Enrichment Methods
        </motion.h2>
        <div className={`${isMobile ? 'flex flex-col' : 'flex flex-col md:flex-row gap-8'}`}>
          <div className={`${isMobile ? 'w-full' : 'md:w-1/2'} space-y-4`}>
            {enrichmentMethods.map((method) => (
              <EnrichmentMethod
                key={method.id}
                method={method}
                isActive={activeMethod === method.id}
                onClick={setActiveMethod}
                isMobile={isMobile}
              />
            ))}
          </div>
          {!isMobile && (
            <div className="md:w-1/2">
              <div className="bg-white p-6 rounded-lg shadow-lg h-[400px] overflow-hidden relative">
                <AnimatePresence mode="wait">
                  <motion.div
                    key={activeMethod}
                    initial={{ opacity: 0 }}
                    animate={{ opacity: 1 }}
                    exit={{ opacity: 0 }}
                    transition={{ duration: 0.3 }}
                    className="absolute inset-0 p-6 overflow-y-auto"
                  >
                    <h3 className="text-2xl font-semibold mb-4 text-daring-indigo">
                      {enrichmentMethods.find(m => m.id === activeMethod).title}
                    </h3>
                    <p className="text-napoleon">
                      {enrichmentMethods.find(m => m.id === activeMethod).description}
                    </p>
                  </motion.div>
                </AnimatePresence>
              </div>
            </div>
          )}
        </div>
      </div>
    </section>
  );
};

export default function Home() {
  return (
    <div className="min-h-screen flex flex-col bg-white text-napoleon font-sans">
      <Head>
        <title>Data Forge - Enhance Your B2B Contact Information</title>
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet" />
      </Head>

      <Header />

      <main className="flex-grow">
        {/* Hero Section with Contact Enrichment Form */}
        <section className="bg-gradient-to-b from-white via-puturple/30 to-white py-20">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="flex flex-col md:flex-row items-center justify-between">
              <motion.div className="md:w-1/2 mb-10 md:mb-0" {...fadeIn}>
                <h1 className="text-4xl md:text-5xl font-bold mb-6 text-daring-indigo">Enhance Your B2B Contact Information</h1>
                <p className="text-xl mb-8 text-napoleon">Get accurate, up-to-date contact details for your prospects and customers.</p>
                <ul className="mb-8">
                  <li className="flex items-center mb-2">
                    <span className="mr-2">✓</span>
                    <span>Verify and update existing contacts</span>
                  </li>
                  <li className="flex items-center mb-2">
                    <span className="mr-2">✓</span>
                    <span>Find new decision-makers in target companies</span>
                  </li>
                  <li className="flex items-center">
                    <span className="mr-2">✓</span>
                    <span>Improve your outreach success rate</span>
                  </li>
                </ul>
              </motion.div>
              <motion.div className="md:w-1/2 md:pl-10" {...fadeIn}>
                <ContactEnrichmentForm />
              </motion.div>
            </div>
          </div>
        </section>

        {/* How It Works */}
        <section className="py-20">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <motion.h2 className="text-3xl font-bold text-center mb-16 text-daring-indigo" {...fadeIn}>
              How Data Forge Works
            </motion.h2>
            <div className="flex flex-col md:flex-row justify-between items-start space-y-12 md:space-y-0 md:space-x-8">
              {[
                { number: 1, title: "Input Your Data", description: "Enter the information you have about your contacts or target companies." },
                { number: 2, title: "We Enrich Your Data", description: "Our system searches multiple reliable sources to find and verify contact information." },
                { number: 3, title: "Get Updated Results", description: "Receive accurate, up-to-date contact details ready for your outreach campaigns." }
              ].map((step, index) => (
                <motion.div key={index} className="w-full md:w-1/3" {...fadeIn}>
                  <div className="bg-emerald-pool text-white rounded-full w-12 h-12 flex items-center justify-center text-xl font-bold mb-4">
                    {step.number}
                  </div>
                  <h3 className="text-xl font-semibold mb-2 text-daring-indigo">{step.title}</h3>
                  <p className="text-napoleon">{step.description}</p>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Features */}
        <section className="bg-parfait bg-opacity-20 py-20">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <motion.h2 className="text-3xl font-bold text-center mb-16 text-daring-indigo" {...fadeIn}>
              Key Features
            </motion.h2>
            <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
              {[
                { title: "Fast Processing", description: "Get results within minutes, not hours or days." },
                { title: "High Accuracy", description: "Our data is verified from multiple sources for reliability." },
                { title: "Comprehensive Results", description: "Get emails, phone numbers, job titles, and more." },
                { title: "Data Protection", description: "Your data and searches are kept private and secure." },
                { title: "Easy Integration", description: "Works with popular CRMs and sales tools." },
                { title: "Regular Updates", description: "Our database is constantly refreshed for the latest information." }
              ].map((feature, index) => (
                <motion.div 
                  key={index}
                  className="bg-white p-6 rounded-lg shadow-lg hover:shadow-xl transition duration-300"
                  whileHover={{ y: -5 }}
                  {...fadeIn}
                >
                  <h3 className="text-xl font-semibold mb-2 text-daring-indigo">{feature.title}</h3>
                  <p className="text-napoleon">{feature.description}</p>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* New Flexible Enrichment Methods Section */}
        <FlexibleEnrichmentMethods />

        {/* Testimonials */}
        <section className="py-20">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <motion.h2 className="text-3xl font-bold text-center mb-16 text-daring-indigo" {...fadeIn}>
              What Our Clients Say
            </motion.h2>
            <div className="grid md:grid-cols-2 gap-8">
              {[
                { quote: "Data Forge has significantly improved our outreach success rate. We're now connecting with the right people more often.", name: "Sarah Johnson", title: "Sales Manager, TechCorp", image: "/api/placeholder/60/60" },
                { quote: "The accuracy of the contact information has saved us countless hours of manual research and verification.", name: "Michael Lee", title: "Marketing Director, GrowthSolutions", image: "/api/placeholder/60/60" }
              ].map((testimonial, index) => (
                <motion.div key={index} className="bg-white p-8 rounded-lg shadow-lg" {...fadeIn}>
                  <p className="text-napoleon mb-6 text-lg italic">"{testimonial.quote}"</p>
                  <div className="flex items-center">
                    <img src={testimonial.image} alt={testimonial.name} className="w-12 h-12 rounded-full mr-4" />
                    <div>
                      <p className="font-semibold text-daring-indigo">{testimonial.name}</p>
                      <p className="text-sm text-napoleon">{testimonial.title}</p>
                    </div>
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* FAQ Section */}
        <section className="py-20 bg-gray-50">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <motion.h2 className="text-3xl font-bold text-center mb-12 text-daring-indigo" {...fadeIn}>
              Frequently Asked Questions
            </motion.h2>
            <div className="space-y-8">
              {[
                { question: "How accurate is the enriched data?", answer: "Our data is highly accurate, with a 95% match rate for email addresses and 90% for phone numbers." },
                { question: "Is my data safe with Data Forge?", answer: "Absolutely. We prioritize data security and comply with GDPR and other data protection regulations." },
                { question: "How often is your database updated?", answer: "Our database is updated daily to ensure you always have access to the most current information." },
                { question: "Can I integrate Data Forge with my CRM?", answer: "Yes, we offer integrations with popular CRMs like Salesforce, HubSpot, and more." },
              ].map((faq, index) => (
                <motion.div key={index} className="bg-white p-6 rounded-lg shadow-lg" {...fadeIn}>
                  <h3 className="text-lg font-semibold mb-2 text-daring-indigo">{faq.question}</h3>
                  <p className="text-napoleon">{faq.answer}</p>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* CTA Section */}
        <section className="bg-daring-indigo text-white py-20">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
            <motion.h2 className="text-4xl font-bold mb-6" {...fadeIn}>
              Ready to Enhance Your Contact Data?
            </motion.h2>
            <motion.p className="text-xl mb-12" {...fadeIn}>
              Start improving your outreach effectiveness today.
            </motion.p>
            <motion.button 
              className="bg-emerald-pool text-white px-8 py-3 rounded-lg text-lg font-semibold hover:bg-opacity-90 transition duration-300 shadow-lg"
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              Start Your Free Trial
            </motion.button>
            <p className="mt-4 text-sm">No credit card required. 7-day free trial with 100 lookups.</p>
          </div>
        </section>
      </main>

      <Footer />
    </div>
  );
}
----------------------------------------

File: postcss.config.js

module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}

----------------------------------------

Directory: public

File: README.md

Welcome to the NextJS base template bootstrapped using the `create-next-app`. This template supports TypeScript, but you can use normal JavaScript as well.

## Getting Started

Hit the run button to start the development server.

You can start editing the page by modifying `pages/index.tsx`. The page auto-updates as you edit the file.

[API routes](https://nextjs.org/docs/api-routes/introduction) can be accessed on `/api/hello`. This endpoint can be edited in `pages/api/hello.ts`.

The `pages/api` directory is mapped to `/api/*`. Files in this directory are treated as [API routes](https://nextjs.org/docs/api-routes/introduction) instead of React pages.

## Learn More

To learn more about Next.js, take a look at the following resources:

- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.
- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.

## Productionizing your Next App

To make your next App run smoothly in production make sure to deploy your project with [Repl Deployments](https://docs.replit.com/hosting/deployments/about-deployments)!

You can also produce a production build by running `npm run build` and [changing the run command](https://docs.replit.com/programming-ide/configuring-repl#run) to `npm run start`.

----------------------------------------

Directory: styles

File:   globals.css

/* File: styles/globals.css */

@tailwind base;
@tailwind components;
@tailwind utilities;
----------------------------------------

File:   Home.module.css

.container {
  padding: 0 2rem;
}

.main {
  min-height: 100vh;
  padding: 4rem 0;
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.footer {
  display: flex;
  flex: 1;
  padding: 2rem 0;
  border-top: 1px solid #eaeaea;
  justify-content: center;
  align-items: center;
}

.footer a {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-grow: 1;
}

.title a {
  color: #0070f3;
  text-decoration: none;
}

.title a:hover,
.title a:focus,
.title a:active {
  text-decoration: underline;
}

.title {
  margin: 0;
  line-height: 1.15;
  font-size: 4rem;
}

.title,
.description {
  text-align: center;
}

.description {
  margin: 4rem 0;
  line-height: 1.5;
  font-size: 1.5rem;
}

.code {
  background: #fafafa;
  border-radius: 5px;
  padding: 0.75rem;
  font-size: 1.1rem;
  font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono,
    Bitstream Vera Sans Mono, Courier New, monospace;
}

.grid {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-wrap: wrap;
  max-width: 800px;
}

.card {
  margin: 1rem;
  padding: 1.5rem;
  text-align: left;
  color: inherit;
  text-decoration: none;
  border: 1px solid #eaeaea;
  border-radius: 10px;
  transition: color 0.15s ease, border-color 0.15s ease;
  max-width: 300px;
}

.card:hover,
.card:focus,
.card:active {
  color: #0070f3;
  border-color: #0070f3;
}

.card h2 {
  margin: 0 0 1rem 0;
  font-size: 1.5rem;
}

.card p {
  margin: 0;
  font-size: 1.25rem;
  line-height: 1.5;
}

.logo {
  height: 1em;
  margin-left: 0.2rem;
}

@media (max-width: 600px) {
  .grid {
    width: 100%;
    flex-direction: column;
  }
}

----------------------------------------

File: tailwind.config.js

// tailwind.config.js

module.exports = {
  content: [
    "./pages/**/*.{js,ts,jsx,tsx}",
    "./components/**/*.{js,ts,jsx,tsx}",
  ],
  theme: {
    extend: {
      colors: {
        'daring-indigo': '#4B4E6D',
        'parfait': '#C6B3AB',
        'puturple': '#B2A7D1',
        'emerald-pool': '#346B6D',
        'napoleon': '#4A4A4A',
      },
      fontFamily: {
        sans: ['Inter', 'ui-sans-serif', 'system-ui', '-apple-system', 'BlinkMacSystemFont', 'Segoe UI', 'Roboto', 'Helvetica Neue', 'Arial', 'Noto Sans', 'sans-serif', 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'],
      },
    },
  },
  plugins: [],
}
----------------------------------------

File: tsconfig.json

{
  "compilerOptions": {
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": false,
    "noEmit": true,
    "incremental": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "target": "es5",
    "forceConsistentCasingInFileNames": true
  },
  "include": [
    "next-env.d.ts",
    "**/*.ts",
    "**/*.tsx",
    ".next/types/**/*.ts"
  ],
  "exclude": [
    "node_modules"
  ]
}

----------------------------------------

File: next.config.js

// File: next.config.js

module.exports = {
  reactStrictMode: true,
}
----------------------------------------

File: postcss.config.js

module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}

----------------------------------------

File: tailwind.config.js

// tailwind.config.js

module.exports = {
  content: [
    "./pages/**/*.{js,ts,jsx,tsx}",
    "./components/**/*.{js,ts,jsx,tsx}",
  ],
  theme: {
    extend: {
      colors: {
        'daring-indigo': '#4B4E6D',
        'parfait': '#C6B3AB',
        'puturple': '#B2A7D1',
        'emerald-pool': '#346B6D',
        'napoleon': '#4A4A4A',
      },
      fontFamily: {
        sans: ['Inter', 'ui-sans-serif', 'system-ui', '-apple-system', 'BlinkMacSystemFont', 'Segoe UI', 'Roboto', 'Helvetica Neue', 'Arial', 'Noto Sans', 'sans-serif', 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'],
      },
    },
  },
  plugins: [],
}
----------------------------------------

File: tsconfig.json

{
  "compilerOptions": {
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": false,
    "noEmit": true,
    "incremental": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "target": "es5",
    "forceConsistentCasingInFileNames": true
  },
  "include": [
    "next-env.d.ts",
    "**/*.ts",
    "**/*.tsx",
    ".next/types/**/*.ts"
  ],
  "exclude": [
    "node_modules"
  ]
}

----------------------------------------

File: package.json

{
  "name": "data-forge",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "@heroicons/react": "^2.1.5",
    "framer-motion": "^6.5.1",
    "next": "12.3.4",
    "react": "18.2.0",
    "react-dom": "18.2.0"
  },
  "devDependencies": {
    "@types/node": "22.7.5",
    "@types/react": "18.3.11",
    "autoprefixer": "^10.4.14",
    "eslint": "8.38.0",
    "eslint-config-next": "13.3.0",
    "postcss": "^8.4.21",
    "tailwindcss": "^3.3.1",
    "typescript": "5.6.3"
  }
}

----------------------------------------

File: README.md

Welcome to the NextJS base template bootstrapped using the `create-next-app`. This template supports TypeScript, but you can use normal JavaScript as well.

## Getting Started

Hit the run button to start the development server.

You can start editing the page by modifying `pages/index.tsx`. The page auto-updates as you edit the file.

[API routes](https://nextjs.org/docs/api-routes/introduction) can be accessed on `/api/hello`. This endpoint can be edited in `pages/api/hello.ts`.

The `pages/api` directory is mapped to `/api/*`. Files in this directory are treated as [API routes](https://nextjs.org/docs/api-routes/introduction) instead of React pages.

## Learn More

To learn more about Next.js, take a look at the following resources:

- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.
- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.

## Productionizing your Next App

To make your next App run smoothly in production make sure to deploy your project with [Repl Deployments](https://docs.replit.com/hosting/deployments/about-deployments)!

You can also produce a production build by running `npm run build` and [changing the run command](https://docs.replit.com/programming-ide/configuring-repl#run) to `npm run start`.

----------------------------------------

